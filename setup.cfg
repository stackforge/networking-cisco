[metadata]
name = networking-cisco
version = 2015.1.0
summary = Networking Cisco contains the Cisco vendor code for OpenStack Neutron
description-file =
    README.rst
author = Cisco Systems
author-email = openstack-networking@cisco.com
home-page = https://github.com/openstack/networking-cisco
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[files]
packages =
    networking_cisco
data_files =
    etc/neutron =
        etc/neutron/plugins/ml2/ml2_conf_cisco.ini
        etc/neutron/plugins/ml2/ml2_conf_ncs.ini
        etc/neutron/plugins/cisco/cisco_cfg_agent.ini
        etc/neutron/plugins/cisco/cisco_device_manager_plugin.ini
        etc/neutron/plugins/cisco/cisco_router_plugin.ini
        etc/neutron/plugins/cisco/cisco_vpn_agent.ini
   etc/saf =
        etc/saf/enabler_conf.ini
   etc/saf/init =
        etc/saf/init/fabric-enabler-server.conf
        etc/saf/init/fabric-enabler-server.service
        etc/saf/init/fabric-enabler-agent.conf
        etc/saf/init/fabric-enabler-agent.service

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
console_scripts =
    neutron-cisco-apic-host-agent = networking_cisco.plugins.ml2.drivers.cisco.apic.apic_topology:agent_main
    neutron-cisco-apic-service-agent = networking_cisco.plugins.ml2.drivers.cisco.apic.apic_topology:service_main
    neutron-cisco-cfg-agent = networking_cisco.plugins.cisco.cfg_agent.cfg_agent:main
    fabric-enabler-server = networking_cisco.apps.saf.dfa_enabler_server:dfa_server
    fabric-enabler-agent = networking_cisco.apps.saf.dfa_enabler_agent:dfa_agent
    fabric-enabler-cli = networking_cisco.apps.saf.dfa_cli:dfa_cli
neutron.ml2.type_drivers =
    nexus_vxlan = networking_cisco.plugins.ml2.drivers.cisco.nexus.type_nexus_vxlan:NexusVxlanTypeDriver
neutron.ml2.mechanism_drivers =
    # Note: ncs and cisco_ncs point to the same driver entrypoint
    # TODO: The old name (ncs) can be dropped when it is no longer used
    ncs = networking_cisco.plugins.ml2.drivers.cisco.ncs.driver:NCSMechanismDriver
    cisco_ncs = networking_cisco.plugins.ml2.drivers.cisco.ncs.driver:NCSMechanismDriver
    cisco_nexus = networking_cisco.plugins.ml2.drivers.cisco.nexus.mech_cisco_nexus:CiscoNexusMechanismDriver
    cisco_apic = networking_cisco.plugins.ml2.drivers.cisco.apic.mechanism_apic:APICMechanismDriver
    cisco_n1kv = networking_cisco.plugins.ml2.drivers.cisco.n1kv.mech_cisco_n1kv:N1KVMechanismDriver
    cisco_ucsm = networking_cisco.plugins.ml2.drivers.cisco.ucsm.mech_cisco_ucsm:CiscoUcsmMechanismDriver

# Service Plugins
neutron.service_plugins =
    cisco_n1kv_profile = networking_cisco.plugins.ml2.drivers.cisco.n1kv.policy_profile_service:PolicyProfilePlugin
    cisco_n1kv_net_profile = networking_cisco.plugins.ml2.drivers.cisco.n1kv.network_profile_service:NetworkProfilePlugin
    cisco_device_manager = networking_cisco.plugins.cisco.service_plugins.cisco_device_manager_plugin:CiscoDeviceManagerPlugin
    cisco_l3_routing = networking_cisco.plugins.cisco.service_plugins.cisco_router_plugin:CiscoRouterPlugin
    apic_l3 = networking_cisco.services.l3_router.l3_apic:ApicL3ServicePlugin

# Extension Drivers
neutron.ml2.extension_drivers =
    cisco_n1kv_ext = networking_cisco.plugins.ml2.drivers.cisco.n1kv.n1kv_ext_driver:CiscoN1kvExtensionDriver
neutron.db.alembic_migrations =
    networking-cisco = networking_cisco.db.migration:alembic_migrations

# Extensions to neutronclient
neutronclient.extension =
    hosting_devices = networking_cisco.neutronclient.hostingdevice
    hosting_device_scheduler = networking_cisco.neutronclient.hostingdevicescheduler
    hosting_device_templates = networking_cisco.neutronclient.hostingdevicetemplate
    router_scheduler = networking_cisco.neutronclient.routerscheduler
    router_types = networking_cisco.neutronclient.routertype

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = networking_cisco/locale/networking-cisco.pot

[compile_catalog]
directory = networking_cisco/locale
domain = networking-cisco

[update_catalog]
domain = networking-cisco
output_dir = networking_cisco/locale
input_file = networking_cisco/locale/networking-cisco.pot

[wheel]
universal = 1
