[ml2_cisco_ucsm]

# In an installation with multiple UCSMs, please
# proceed to the [ml2_cisco_ucsm_ip:<IP address>]
# section detailed right after the single UCSM
# configuration section.

# (StrOpt) Configuration for Single UCSM Support
# Cisco UCS Manager IP address
# ucsm_ip = 1.1.1.1

# (StrOpt) Username to connect to UCS Manager
# ucsm_username = user

# (StrOpt) Password to connect to UCS Manager
# ucsm_password = password

# (ListOpt) Hostname to Service profile mapping for UCS Manager
# controlled compute hosts. This Service profile should not be
# associated with a Service Profile Template. If the Serice Profile
# is not specified with a path, the driver assumes that it is at the
# root level on the UCSM.
# ucsm_host_list = Hostname1:Serviceprofile1, Hostname2:Serviceprofile2

# (ListOpt) SR-IOV and VM-FEX vendors to be handled by the driver
# xxxx:yyyy represents vendor_id:product_id of the PCI networking
# devices that the driver needs to handle.
# It is implicit that the SR-IOV capable devices specified here
# should be supported on the UCS platform.
# This config is optional and defaults to 1137:0071, which represents
# the Cisco VIC.
# supported_pci_devs = '2222:3333', '4444:5555'

# (ListOpt) Ethernet port names to be used for virtio ports
# This config lets the Cloud Admin specify what ports on the
# UCS Servers can be used for OpenStack virtual port configuration.
# This is an optional config and defaults to eth0 and eth1.
# ucsm_virtio_eth_ports = os_eth0, os_eth1

# (BoolOpt) The UCSM driver will always perform SSL certificate
# checking on the UCS Managers that it is connecting to. This checking
# can be disabled by setting this global configuration to False.
# This configuration is optional and will default to True when not
# specified. Disabling this check will leave the connection to UCS
# Manager insecure and vulnerable to man-in-the-middle attacks.
# ucsm_https_verify = False

# UCSM information for multi-UCSM support.
# The following section can be repeated for the number of UCS Managers in
# the cloud.
# UCSM information format:
# [ml2_cisco_ucsm_ip:1.1.1.1]
# ucsm_username = username
# ucsm_password = password
# ucsm_virtio_eth_ports = eth0, eth1

# (ListOpt) Similar to the config specified for single UCSM config
# ucsm_host_list=Hostname1:Serviceprofile1, Hostname2:Serviceprofile2

# (ListOpt) Service Profile Template config per UCSM. This is a mapping of Service Profile
# Template to the list of UCS Servers controlled by this template.
# sp_template_list = SP_Template1_path:SP_Template1:S1,S2 SP_Template2_path:SP_Template2:S3,S4

# (ListOpt) VNIC Profile Template config per UCSM.
# Allows the cloud admin to specify a VNIC Template on the UCSM that contains common config for
# every port connected to a specific physnet. This physnet to VNIC Template mapping needs to be
# provided to the driver so that the VNIC Template can be modified when additional neutron networks
# are associated with this physical network.
# Each element in this list has 3 parts: the physical network that is defined in neutron configuration,
# the VNIC Template with its path in UCSM, the list of ports on the UCS Servers that are connected to
# this physical network. This is an optional config with no defaults.
# vnic_template_list = physnet1:vnic_template_path1:vt11,vt12 physnet2:vnic_template_path2:vt21,vt22

# (StrOpt) Pre-defined QoS policy name
# This config allows the cloud admin to pre-create a QoS policy on the UCSM. If this config is present,
# the UCSM driver will associate this QoS policy with every Port profile it creates for SR-IOV ports.
# This is an optional config with no defaults.
# sriov_qos_policy=Test

# SR-IOV Multi-VLAN trunk config section
# This config section was specifically added to accomodate the scenario where an application
# using an SR-IOV port to communicate, would like to send traffic on multiple application
# specific VLANs not known to OpenStack. This config section is applicable across all UCSMs
# specified as part of the OpenStack cloud.
# The names of the neutron networks on which the SR-IOV ports are going to be created have to
# be known ahead of time and should be associated with a list or range of application VLANs
# using the following format.
# [sriov_multivlan_trunk]
# neutron network name=<comma seperated list of VLAN-ids or VLAN-id ranges>
# For example:
# test_network1=5,7-9
# test_network2=500,701 - 709
