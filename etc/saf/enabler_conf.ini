# The following are for keystoneclient authentication
[keystone_authtoken]
#project_name = admin
#username = admin
#password = yourpasswd
#auth_url = http://controllerip/identity
#user_domain_name = default
#project_domain_name = default

# The following are for neutronclient authentication.
[neutron]
#project_name = service
#username = neutron
#password = yourpasswd
#auth_url = http://controllerip/identity
#user_domain_name = default
#project_domain_name = default

# The following are for novaclient authentication 
[nova]
#project_name = service
#username = nova
#password = yourpasswd
#auth_url = http://controllerip/identity
#user_domain_name = default
#project_domain_name = default
#api_version = 2.1
#region_name = RegionOne

[general]
# If uplink detection is not needed, enter the hostname(s) in node field, which
# is comma separated list of hosts for which static uplink is configured.
# One way to find the node name is from /etc/hostname
# The node_uplink field has the comma separated uplink ports in server which
# is connected to the leaf. In example below, host1 has eth5 connected to leaf
# and host2 has eth4 connected to leaf.
#
# node = host1.example.com, host2.example.com
# node_uplink = eth5, eth4

[dfa_agent]
# OVS Neutron Agent related configuration. Ensure that this is the same as
# what is configured for OVS Neutron Agent.
# The defaults are given below for convenience.
# integration_bridge = br-int
# external_dfa_bridge = br-ethd

[dcnm]
# IP address of the DCNM. It should be reachable from openstack
# controller node.
#
# dcnm_ip = 3.3.3.3


# DCNM server login and rabbitmq messaging credentials
#
# dcnm_user = dcnm-login-username
# dcnm_amqp_user = dncm-amqp-username
# dcnm_password = dcnm-password


# Gateway MAC address. It should be the same as configured on the leaf nodes
#
# gateway_mac = 20:20:00:00:00:AA

# Orchestrator ID
# Orchestartor id used for registering the segmentation id range on DCNM
# If there are multiple setups using the same DCNM, please ensure
# different orchestrator IDs are used. no space is allowed
#
# orchestrator_id = 'Openstack'

# Segmentation ID range.
# The seg-id-min and seg-id-max are 20-bit integer values
#
# segmentation_id_min = seg-id-min
# segmentation_id_max = seg-id-max


# The suffix of a network name when it is created by DCNM.
#
# dcnm_net_ext = '(DCNM)'


# The lease file name of DHCP server on the DCNM.
#
# dcnm_dhcp_leases = '/var/lib/dhcpd/dhcpd.leases'


# Default configuration profile when creating a network in DCNM.
#
# The default is 'defaultNetworkIpv4EfProfile'.
# default_cfg_profile = defaultNetworkIpv4EfProfile


# Default vrf profile name for a partition in DCNM.
#
# default_vrf_profile = vrf-common-universal

# Default dhcp server is to use native dhcp
#dcnm_dhcp = false

[dfa_rpc]
# Transport URL parameter for RPC.
# The credentials should be set based on setup.
#
# transport_url = 'rabbit://username:password@rabbitmq-server-ip:5672//'

[dfa_mysql]
# MYSQL DB connection option
# The credentials should be set based on the setup.
#
# connection = mysql://username:password@mysql-server-ip/cisco_dfa?charset=utf8


[dfa_notify]
# Notification queue name for DFA enabler.
# service_name: keystone and neutron
#
# cisco_dfa_notify_queue = cisco_dfa_%(service_name)s_notify

[dfa_log]
# Log file name.
# If log file name and directory is not specified, the default
# is the standard output.
#
# log_file = fabric_enabler.log


# The direcoty name for the log file.
#
# log_dir = /home/localadmin/Logs

# Enabler debugging output level. Default is WARNING.
# Set to DEBUG to see the debbugging output
#
# log_level = DEBUG


# Enable syslog. Debugging messages goes to syslog
#
# use_syslog = False
# syslog_log_facility = LOG_USER


# Output format of log messages.
#
# log_format = %(asctime)s %(levelname)8s [%(name)s] %(message)s


# If need to save pid of fabric-enabler-server and fabric-enabler-agent
# the location of pid files should be set by the following options.
#
# pid_dir =
# pid_server_file =
# pid_agent_file =

[vdp]
# VDP default options
#
# mgrid2 = 0
# typeid = 0
# typeidver = 0
# vsiidfrmt = 5
# hints = none
# filter = 4
# vdp_sync_timeout = 30

[sys]
# Default root_helper
#
# root_helper = 'sudo'

[firewall]
# Firewall Default Parameters. The defaults are provided in the comment below.
#
#Currently supports phy_asa and Openstack native Firewall.
#Enter phy_asa or native
#device = native
#This is the Mgmt IP address for the physical Firewall device. For native,
#leave the line as uncommented.
#fw_mgmt_ip = [1.1.1.1]
#Uncomment the below and fill up the right values for phy_asa, not needed for
#native FW.
#fw_username = [admin]
#fw_password = [cisco123]
#This is the 'in' network interface of Tenant Edge Firewall.
#fw_interface_in = [Gi0/0]
#This is the 'out' network interface of Tenant Edge Firewall.
#fw_interface_out = [Gi0/1]
# The below configs are needed, fill this based on FP or EVPN fabric
# and further if it's based on Native or ASA FW
# This is the network profile for 'in' service network.
#fw_service_host_profile = 'serviceNetworkUniversalTfStaticRoutingProfile'
# This is the profile of the 'out' service prtition.
#fw_service_part_vrf_profile = 'vrf-common-universal-external-static'
# This is the network profile for 'out' service network.
#fw_service_ext_profile = 'externalNetworkUniversalTfStaticRoutingESProfile'
#The following lines specifies the starting and ending subnets for 'in' and
#'out' service networks. In the example below, for a 24 subnet, the first
#service IN network will have 100.120.2.x, and subsequent ones will have
#100.120.3.x and so on.
#fw_service_in_ip_start = 100.120.2.0/24
#fw_service_in_ip_end = 100.120.20.0/24
#fw_service_out_ip_start = 200.220.2.0/24
#fw_service_out_ip_end = 200.220.20.0/24
# This specifies the subnet for the dummy interface. Openstack needs a router
# with an interface for the FW rules to be applied. So, enabler needs to
# create a router with a dummy interface so that FW can get activated.
#fw_service_dummy_ip_subnet = '9.9.9.0/24'

[loadbalance]
#lb_enabled = False
#lb_native = True